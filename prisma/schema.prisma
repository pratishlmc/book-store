datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Book {
  id       String   @id @default(cuid())
  title    String
  genre String
  price     String
  original_price    String
  image    String
  sellerId  String
  seller   User      @relation(fields: [sellerId], references: [id])
}

// model Link {
//   id      String   @id @default(cuid())
//   link  String
//   url String
//   sellerId  String
//   seller   User      @relation(fields: [sellerId], references: [id])
// }

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  links Json @default("[]")
  seller Boolean @default(false)
  books Book[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}






// Address is an embedded document
// type Address {
//   street String
//   city   String
//   state  String
//   zip    String
// }